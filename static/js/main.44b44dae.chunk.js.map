{"version":3,"sources":["components/About/style.ts","components/About/About.tsx","components/Country/Sidebar/Sidebar.tsx","components/Country/style.ts","api/fetchData.ts","components/Country/Country.tsx","components/Global/GlobalSidebar/GlobalSidebar.tsx","components/Global/style.ts","components/Global/Global.tsx","components/Navbar/style.ts","components/Navbar/DrawerComponent.tsx","components/Navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["aboutStyle","makeStyles","theme","AboutContainer","padding","Title","fontSize","Content","About","useTheme","classes","className","Sidebar","barData","caseChange","caseType","allCountries","province","countryChange","provinceChange","country","setDate","date","provinceOptions","exists","some","Province","filter","item","Country","map","Box","sx","minWidth","FormControl","fullWidth","m","InputLabel","id","Select","labelId","value","label","onChange","event","MenuItem","Array","from","Set","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","newDate","updatedDate","toISOString","split","renderInput","params","TextField","statisticsStyle","ChartContainer","display","flexDirection","fetchData","a","axios","get","response","data","fetchCountries","fetchGlobalData","dateFrom","dateTo","useState","setCountry","filteredData","setFilteredData","setCaseType","isLoading","setLoading","setAllCountries","setBarData","setProvince","useEffect","then","length","res","countries","sort","b","LinearProgress","mt","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","target","GlobalSidebar","setDateFrom","setDateTo","maxWidth","Global","globalData","setGlobalData","color","AreaChart","Area","stroke","navbarStyle","AppBar","backgroundColor","navlinks","marginLeft","spacing","logo","flexGrow","cursor","link","textDecoration","useStyles","icon","DrawerComponent","openDrawer","setOpenDrawer","Drawer","open","onClose","List","ListItem","onClick","ListItemText","to","Divider","IconButton","Navbar","isMobile","useMediaQuery","breakpoints","down","position","CssBaseline","Toolbar","Typography","variant","App","component","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44b44dae.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst aboutStyle = makeStyles((theme) => ({\r\n  AboutContainer: {\r\n    padding: '100px'\r\n  },\r\n  Title: {\r\n    fontSize: '46px'\r\n  },\r\n  Content: {\r\n    fontSize: '20px'\r\n  }\r\n}));\r\n\r\nexport default aboutStyle;","import React from 'react';\r\nimport aboutStyle from './style';\r\nimport {useTheme} from \"@material-ui/core\";\r\n\r\nconst About:React.FC = () => {\r\n  const theme = useTheme();\r\n  const classes = aboutStyle(theme);\r\n  return (\r\n    <div className={classes.AboutContainer}>\r\n    <h1 className={classes.Title}>About</h1>\r\n    <p className={classes.Content}>This app aimed to inform people about covid around the world. Access data on COVID19 through an easy API for free. Build dashboards, mobile apps or integrate in to other applications. </p>\r\n    <p className={classes.Content}>A new virus called the severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) was identified as the cause of a disease outbreak that began in China in 2019. The disease is called coronavirus disease 2019 (COVID-19).\r\n\r\nIn March 2020, the World Health Organization (WHO) declared COVID-19 a pandemic. Public health groups, including the U.S. Centers for Disease Control and Prevention (CDC) and WHO, are monitoring the pandemic and posting updates on their websites. These groups have also issued recommendations for preventing the spread of the virus.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent, } from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport {ICountrySidebarProps} from '../../../../types/countrySidebar'\r\nimport {ICountries} from '../../../../types/country';\r\n\r\nconst Sidebar:React.FC<ICountrySidebarProps> = ({barData, caseChange, caseType, allCountries, province, countryChange, provinceChange, country, setDate, date }) => {\r\n\r\n  const handleDateChange = (newDate: Date | null) => {\r\n    let updatedDate:string = newDate?.toISOString().split('T')[0] || date;\r\n    setDate(updatedDate);\r\n };\r\n\r\n let provinceOptions = []\r\n let exists = barData.some(country => country.Province !== '');\r\n if(exists) {\r\n  provinceOptions = barData.filter( (item)=> {\r\n    return item.Country === country\r\n  }).map( (item)=> {\r\n    return item.Province\r\n  })\r\n}\r\n\r\n  return(\r\n    <Box sx={{ minWidth: 120 }}>\r\n    <FormControl fullWidth sx={{ m: 2 }}>\r\n      <InputLabel id=\"demo-simple-select-label\">Case type</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={caseType}\r\n        label=\"Age\"\r\n        onChange={ (event: SelectChangeEvent<string>) => caseChange(event)}\r\n      >\r\n        <MenuItem value='Confirmed'>Confirmed</MenuItem>\r\n        <MenuItem value='Recovered'>Recovered</MenuItem>\r\n        <MenuItem value='Deaths'>Deaths</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n    <FormControl fullWidth sx={{ m: 2 }}>\r\n        <InputLabel id=\"demo-simple-select-standard-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-standard-label\"\r\n          id=\"demo-simple-select-standard\"\r\n          value={country}\r\n          label=\"Country\"\r\n          onChange={ (event: SelectChangeEvent<string>) => countryChange(event)}\r\n        >\r\n          {allCountries.map( (country:ICountries)=> {\r\n            return(\r\n              <MenuItem key={country.label} value={country.label}>{country.label}</MenuItem>\r\n            )\r\n          })}\r\n        </Select>\r\n    </FormControl>\r\n    {exists ? \r\n       <FormControl fullWidth sx={{ m: 2 }}>\r\n       <InputLabel id=\"demo-simple-select-label\">Province</InputLabel>\r\n       <Select\r\n         labelId=\"demo-simple-select-label\"\r\n         id=\"demo-simple-select\"\r\n         value={province}\r\n         label=\"Province\"\r\n         onChange={ (event: SelectChangeEvent<string>) => provinceChange(event)}\r\n       >\r\n          {\r\n            Array.from(new Set(provinceOptions)).map( (province:string)=> {\r\n              return ( <MenuItem key={province} value={province}>{province}</MenuItem> )\r\n\r\n            })\r\n           }\r\n       </Select>\r\n     </FormControl>\r\n : null\r\n    }\r\n    <FormControl sx={{ m: 2 }}>\r\n      <LocalizationProvider dateAdapter={AdapterDateFns} sx={{ m: 2 }}>\r\n        <DatePicker\r\n          label=\"Choose Date\"\r\n          value={date}\r\n          onChange={handleDateChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </LocalizationProvider>\r\n    </FormControl>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst statisticsStyle = makeStyles((theme) => ({\r\n  ChartContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: '30px 50px 0 50px'\r\n  },\r\n  '@media screen and (max-width: 768px)': {\r\n    ChartContainer: {\r\n      padding: '50px 0 0 0',\r\n     flexDirection: 'column'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default statisticsStyle;","import axios from 'axios';\r\nimport {IFetchedCountries, IFetchedBarData} from '../../types/countrySidebar'\r\n\r\nexport const fetchData = async (country:string, caseType:string, date:string): Promise<IFetchedBarData[]> => {\r\n  const response = await axios.get<IFetchedBarData[]>(`https://api.covid19api.com/live/country/${country}/status/${caseType}/date/${date}`);\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCountries = async (): Promise<IFetchedCountries[]> => {\r\n  const response = await axios.get<IFetchedCountries[]>('https://api.covid19api.com/countries');\r\n  return response.data;\r\n};\r\n\r\n\r\nexport const fetchGlobalData = async (dateFrom:string, dateTo:string): Promise<any> => {\r\n  const response = await axios.get<any[]>(`https://api.covid19api.com/world?from=${dateFrom}&to=${dateTo}`);\r\n  return response.data;\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport Box from '@mui/material/Box';\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\nimport {useTheme} from \"@material-ui/core\";\r\nimport Sidebar from './Sidebar/Sidebar';\r\nimport statisticsStyle from './style';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport {fetchData, fetchCountries} from '../../api/fetchData';\r\n\r\nconst Country:React.FC = ():JSX.Element => {\r\n  const theme = useTheme();\r\n  const classes = statisticsStyle(theme);\r\n\r\n  const [country, setCountry] = useState<string>('albania');\r\n  const [date, setDate] = useState<string>('2020-03-21');\r\n  const [filteredData, setFilteredData] = useState<Array<any>>([]);\r\n  const [caseType, setCaseType] = useState<string>('Confirmed');\r\n  const [isLoading, setLoading] = useState<boolean>(true);\r\n  const [allCountries, setAllCountries] = useState<Array<any>>([]);\r\n  const [barData, setBarData] = useState<Array<any>>([]);\r\n  const [province, setProvince] = useState<string>('')\r\n\r\n  const caseChange = (event: SelectChangeEvent<string>):void => {\r\n    setCaseType(event.target.value);\r\n  };\r\n\r\n  const provinceChange = (event: SelectChangeEvent<string>):void => {\r\n    setProvince(event.target.value);\r\n  };\r\n\r\n\r\n  const countryChange = (event:SelectChangeEvent<string>):void => {\r\n    setCountry(event.target.value);\r\n    setProvince('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    fetchData(country, caseType, date)\r\n    .then((data) => {\r\n      setBarData(data)\r\n      if(province.length===0) {\r\n        setFilteredData(data)\r\n      }\r\n      else {\r\n        let res = data.filter( (item:any)=> {\r\n          return item.Province === province\r\n        })\r\n        setFilteredData(res)\r\n      }\r\n      setLoading(false)\r\n    }\r\n  );\r\n  }, [caseType, country, date, province]);\r\n\r\n  useEffect( () => {\r\n    fetchCountries()\r\n    .then((data) => {\r\n      setAllCountries(data)\r\n    });\r\n  }, [])\r\n \r\n  let countries = allCountries.map( (country)=> {\r\n    return {label: country.Country}\r\n  })\r\n\r\n  countries.sort(function(a, b){\r\n    if(a.label < b.label) { return -1; }\r\n    if(a.label > b.label) { return 1; }\r\n    return 0;\r\n})\r\n\r\n  return (\r\n    <Box>\r\n    {isLoading ?\r\n    <LinearProgress sx={{ mt: 2 }} /> :\r\n    <div className={classes.ChartContainer}>\r\n      <ResponsiveContainer width=\"95%\" height={400}>\r\n        <BarChart\r\n          width={800}\r\n          height={500}\r\n          data={filteredData}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey={caseType} fill=\"pink\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n\r\n      <Sidebar \r\n        barData = {barData}\r\n        caseChange={caseChange} \r\n        caseType = {caseType} \r\n        allCountries = {countries} \r\n        countryChange = {countryChange} \r\n        provinceChange = {provinceChange}\r\n        province = {province}\r\n        country = {country} \r\n        setDate = {setDate}\r\n        date = {date}\r\n      />\r\n    </div>\r\n    }\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Country;","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Box from '@mui/material/Box';\r\nimport Select, { SelectChangeEvent, } from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport {IGlobalSidebarProps} from '../../../../types/globalSidebar';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nconst GlobalSidebar:React.FC<IGlobalSidebarProps> = ({caseType, caseChange, setDateFrom, setDateTo, dateFrom, dateTo}) => {\r\n  const HandleSetDateFrom = (newDate: Date | null) => {\r\n    let updatedDate:string = newDate?.toISOString().split('T')[0] || 'date';  \r\n    setDateFrom(updatedDate)\r\n  }\r\n\r\n  const HandleSetDateTo = (newDate: Date | null) => {\r\n    let updatedDate:string = newDate?.toISOString().split('T')[0] || 'date';\r\n    setDateTo(updatedDate)\r\n  }\r\n  return (\r\n    <Box sx={{ flexDirection: 'column' }} maxWidth=\"sm\">\r\n    <FormControl sx={{ display:'block', m:4 }}>\r\n      <InputLabel id=\"demo-simple-select-label\">Case type</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={caseType}\r\n        label=\"Age\"\r\n        onChange={ (event: SelectChangeEvent<string>) => caseChange(event)}\r\n      >\r\n        <MenuItem value='NewConfirmed'>Confirmed</MenuItem>\r\n        <MenuItem value='NewRecovered'>Recovered</MenuItem>\r\n        <MenuItem value='NewDeaths'>Deaths</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n     <FormControl sx={{ display: 'block', m:4 }}>\r\n     <LocalizationProvider dateAdapter={AdapterDateFns} sx={{ m: 2 }}>\r\n       <DatePicker\r\n         label=\"Date from\"\r\n         value={dateFrom}\r\n         onChange={HandleSetDateFrom}\r\n         renderInput={(params) => <TextField {...params} />}\r\n       />\r\n     </LocalizationProvider>\r\n   </FormControl>\r\n    <FormControl sx={{display: 'block',  m: 4 }}>\r\n    <LocalizationProvider dateAdapter={AdapterDateFns} sx={{ m: 2 }}>\r\n      <DatePicker\r\n        label=\"Date to\"\r\n        value={dateTo}\r\n        onChange={HandleSetDateTo}\r\n        renderInput={(params) => <TextField {...params} />}\r\n      />\r\n    </LocalizationProvider>\r\n  </FormControl>\r\n  </Box>\r\n  )\r\n}\r\n\r\nexport default GlobalSidebar;","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst statisticsStyle = makeStyles((theme) => ({\r\n  ChartContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: '30px 50px 0 50px'\r\n  },\r\n  '@media screen and (max-width: 768px)': {\r\n    ChartContainer: {\r\n      padding: '50px 0 0 0',\r\n     flexDirection: 'column'\r\n    }\r\n  }\r\n}));\r\nexport default statisticsStyle;","import React, {useState, useEffect} from 'react';\r\nimport GlobalSidebar from './GlobalSidebar/GlobalSidebar';\r\nimport Box from '@mui/material/Box';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\nimport {useTheme} from \"@material-ui/core\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  AreaChart,\r\n  Area,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport {fetchGlobalData} from '../../api/fetchData';\r\nimport statisticsStyle from './style';\r\n\r\nconst Global:React.FC = () => {\r\n  const theme = useTheme();\r\n  const classes = statisticsStyle(theme);\r\n  const [dateFrom, setDateFrom] = useState<string>('2021-03-01');\r\n  const [dateTo, setDateTo] = useState<string>('2021-10-01')\r\n  const [globalData, setGlobalData] = useState([]);\r\n  const [caseType, setCaseType] = useState<string>('NewConfirmed');\r\n  const [isLoading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchGlobalData(dateFrom, dateTo).then( data=> setGlobalData(data))\r\n    setLoading(false)  \r\n  }, [dateFrom, dateTo, caseType]);\r\n\r\n\r\n  const caseChange = (event: SelectChangeEvent<string>):void => {\r\n    setCaseType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {isLoading ? <LinearProgress sx={{ mt: 2 }} color=\"secondary\" /> :\r\n      <div className={classes.ChartContainer}>\r\n        <ResponsiveContainer width=\"95%\" height={400}>\r\n          <AreaChart\r\n          width={750}\r\n          height={500}\r\n          data={globalData}\r\n          margin={{\r\n          top: 20, right: 20, bottom: 20, left: 20,\r\n        }}\r\n        >\r\n          <XAxis dataKey=\"Date\" />\r\n          <YAxis />\r\n          <Area dataKey={caseType} stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n          <Tooltip />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  \r\n    <GlobalSidebar caseChange = {caseChange} caseType = {caseType} setDateTo = {setDateTo} setDateFrom = {setDateFrom} dateFrom ={dateFrom} dateTo = {dateTo}/>\r\n      </div>\r\n    }\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Global;","import {  makeStyles } from \"@material-ui/core\";\r\n\r\nconst navbarStyle = makeStyles((theme) => ({\r\n  AppBar: {\r\n    backgroundColor: '#283593'\r\n  },\r\n  navlinks: {\r\n    display: \"flex\",\r\n    marginLeft: theme.spacing(5)\r\n  },\r\n  logo: {\r\n    flexGrow: 1,\r\n    cursor: \"pointer\"\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    fontSize: \"20px\",\r\n    marginLeft: theme.spacing(5),\r\n    \"&:hover\": {\r\n      color: \"#c4e8ff\",\r\n    },\r\n  }\r\n}));\r\n\r\nexport default navbarStyle;","import React, { useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nconst useStyles = makeStyles(()=>({\r\n    link:{\r\n        textDecoration:\"none\",\r\n        color: \"blue\",\r\n        fontSize: \"20px\",\r\n    },\r\n    icon:{\r\n        color: \"white\"\r\n    }\r\n}));\r\n\r\nconst DrawerComponent: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  return (\r\n    <>\r\n      <Drawer\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n      >\r\n        <List>\r\n        <ListItem onClick={() => setOpenDrawer(false)}>\r\n            <ListItemText>\r\n              <Link to=\"/\" className={classes.link}>\r\n                Global statistics\r\n              </Link>\r\n            </ListItemText>\r\n          </ListItem>\r\n          <Divider/>\r\n          <ListItem onClick={() => setOpenDrawer(false)}>\r\n            <ListItemText>\r\n            <Link to=\"/country\" className={classes.link}>\r\n              Country statistic\r\n            </Link>\r\n            </ListItemText>\r\n          </ListItem>\r\n          <Divider/>\r\n          <ListItem onClick={() => setOpenDrawer(false)}>\r\n            <ListItemText>\r\n            <Link to=\"/about\" className={classes.link}>\r\n              About\r\n            </Link>            </ListItemText>\r\n          </ListItem>\r\n          <Divider/>\r\n        </List>\r\n      </Drawer>\r\n      <IconButton onClick={() => setOpenDrawer(!openDrawer)}className={classes.icon}>\r\n        <MenuIcon/>\r\n      </IconButton>\r\n    </>\r\n  );\r\n}\r\nexport default DrawerComponent;","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  CssBaseline,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport navbarStyle from './style';\r\nimport DrawerComponent from \"./DrawerComponent\";\r\n\r\nconst Navbar: React.FC = ():JSX.Element => {\r\n  const theme = useTheme();\r\n  const classes = navbarStyle(theme);\r\n  const isMobile:boolean = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.AppBar}>\r\n      <CssBaseline />\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.logo}>\r\n          Covid app\r\n        </Typography>\r\n        {isMobile ? (\r\n          <DrawerComponent />\r\n        ) : (\r\n          <div className={classes.navlinks}>\r\n            <Link to=\"/\" className={classes.link}>\r\n              Global statistics\r\n            </Link>\r\n            <Link to=\"/country\" className={classes.link}>\r\n              Country statistic\r\n            </Link>\r\n            <Link to=\"/about\" className={classes.link}>\r\n              About\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default Navbar;","import React from 'react';\nimport { BrowserRouter, HashRouter, Switch, Route } from 'react-router-dom'\nimport About from './components/About/About';\nimport Country from './components/Country/Country';\nimport Global from './components/Global/Global';\nimport Navbar from './components/Navbar/Navbar';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route component={Global} path=\"/\" exact />\n          <Route component={Country} path=\"/country\" exact />\n          <Route component={About} path=\"/about\" />\n        </Switch>\n      </div>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}